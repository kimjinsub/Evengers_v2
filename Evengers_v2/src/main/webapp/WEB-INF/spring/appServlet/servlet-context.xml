<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<task:annotation-driven/>
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="/img/**" location="/WEB-INF/views/img/"/>
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/ces/**" location="/resources/ces/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/fonts/**" location="/resources/fonts/" />
	<resources mapping="/admin/**" location="/resources/admin/" />
	<resources mapping="/upload/**" location="/upload/" />
	<resources mapping="/shop/**" location="/resources/shop/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.event.evengers_v2" />
	
	<beans:bean id="dataSource" 
				class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
						value="net.sf.log4jdbc.DriverSpy"/>
		<beans:property name="url"
						value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"/>
		<beans:property name="username"
						value="ICIA_REAL"/>
		<beans:property name="password"
						value="1111"/>										
	</beans:bean>
	
	<beans:bean id="sqlSessionFactory"
				class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation"
						value="classpath:com/event/evengers_v2/dao/mybatis-conf.xml"/>
		<beans:property name="mapperLocations"
						value="classpath:com/**/mapper/*.xml"/>
	</beans:bean>
	<beans:bean id="mDao"
				class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
						ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface"
						value="com.event.evengers_v2.dao.MemberDao"/>
	</beans:bean>
	<beans:bean id="eDao"
				class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
						ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface"
						value="com.event.evengers_v2.dao.EventDao"/>
	</beans:bean>
	<beans:bean id="cDao"
				class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
						ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface"
						value="com.event.evengers_v2.dao.CeoDao"/>
	</beans:bean>
	<beans:bean id="pDao"
				class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
						ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface"
						value="com.event.evengers_v2.dao.PersonnelDao"/>
	</beans:bean>
	<beans:bean id="qDao"
				class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
						ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface"
						value="com.event.evengers_v2.dao.QuestionDao"/>
	</beans:bean>
	<beans:bean id="payDao"
				class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
						ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface"
						value="com.event.evengers_v2.dao.PayDao"/>
	</beans:bean>
	<beans:bean id="rDao"
				class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
						ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface"
						value="com.event.evengers_v2.dao.RequestDao"/>
	</beans:bean>
	<beans:bean id="fDao"
				class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
						ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface"
						value="com.event.evengers_v2.dao.FinancialDao"/>
	</beans:bean>
	<beans:bean id="sDao"
				class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
						ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface"
						value="com.event.evengers_v2.dao.ScheduleDao"/>
	</beans:bean>
		<!-- 파일 업로드 설정 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"/>
		<beans:property name="maxUploadSize" value="10000000"/><!-- 10MB -->
		<beans:property name="maxInMemorySize" value="10000000"/>
	</beans:bean>
	
	<!-- 트랜잭션처리 -->
	<beans:bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">	
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
    <!-- 스프링 웹소켓 설정 -->
	<beans:bean id="webSocketHandler" class="com.event.evengers_v2.handler.WebSocketHandler"/>
	<websocket:handlers allowed-origins="*">
		<websocket:mapping handler="webSocketHandler" path="/webSocket"/>
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		<websocket:sockjs/>
	</websocket:handlers>
	
	<!-- Session Interceptor(가로채기) -->
	<!-- <interceptors>
		<interceptor>
			mapping의 모든 요청은 Controller에 도착하기 전에 가로챈다
			<mapping path="/*"/>
			exclude-mapping의 요청은 가로채지 않는다
			
			<exclude-mapping path="/"/>
			<exclude-mapping path="/getSessionId"/>
			<exclude-mapping path="/whoRU"/>
			<exclude-mapping path="/getEvtList"/>
			<exclude-mapping path="/getCategoryList"/>
			<exclude-mapping path="/loginFrm"/>
			<exclude-mapping path="/joinFrm"/>
			<exclude-mapping path="/memberJoin"/>
			<exclude-mapping path="/ceoJoin"/>
			<exclude-mapping path="/ceoCheckNumber"/>
			<exclude-mapping path="/ceoDoubleChk"/>
			<exclude-mapping path="/memberDoubleChk"/>
			<exclude-mapping path="/ceoInsert"/>
			<exclude-mapping path="/memberInsert"/>
			<beans:bean class="com.event.evengers_v2.userClass.SessionInterceptor"/>
		</interceptor>
	</interceptors> -->
	
</beans:beans>
